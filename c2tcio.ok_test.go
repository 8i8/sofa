package sofa

import "testing"

//
//  - - - - - - - - - - -
//   T e s t C 2 t c i o
//  - - - - - - - - - - -
//
//  Test C2tcio function.
//
//  Called:  C2tcio, vvd
//
//  This revision:  2013 August 7
//
func TestC2tcio(t *testing.T) {
	const fname = "C2tcio"
	var rc2i, rpom, rc2t [3][3]float64
	var era float64

	rc2i[0][0] = 0.9999998323037164738
	rc2i[0][1] = 0.5581526271714303683e-9
	rc2i[0][2] = -0.5791308477073443903e-3

	rc2i[1][0] = -0.2384266227524722273e-7
	rc2i[1][1] = 0.9999999991917404296
	rc2i[1][2] = -0.4020594955030704125e-4

	rc2i[2][0] = 0.5791308472168153320e-3
	rc2i[2][1] = 0.4020595661593994396e-4
	rc2i[2][2] = 0.9999998314954572365

	era = 1.75283325530307

	rpom[0][0] = 0.9999999999999674705
	rpom[0][1] = -0.1367174580728847031e-10
	rpom[0][2] = 0.2550602379999972723e-6

	rpom[1][0] = 0.1414624947957029721e-10
	rpom[1][1] = 0.9999999999982694954
	rpom[1][2] = -0.1860359246998866338e-5

	rpom[2][0] = -0.2550602379741215275e-6
	rpom[2][1] = 0.1860359247002413923e-5
	rpom[2][2] = 0.9999999999982369658

	tests := []struct {
		ref string
		fn  func([3][3]float64, float64, [3][3]float64) [3][3]float64
	}{
		{"cgo", CgoC2tcio},
		{"go", GoC2tcio},
	}

	for _, test := range tests {
		tname := fname + " " + test.ref

		rc2t = test.fn(rc2i, era, rpom)

		vvd(t, rc2t[0][0], -0.1810332128307110439, 1e-12,
			tname, "11")
		vvd(t, rc2t[0][1], 0.9834769806938470149, 1e-12,
			tname, "12")
		vvd(t, rc2t[0][2], 0.6555535638685466874e-4, 1e-12,
			tname, "13")

		vvd(t, rc2t[1][0], -0.9834768134135996657, 1e-12,
			tname, "21")
		vvd(t, rc2t[1][1], -0.1810332203649448367, 1e-12,
			tname, "22")
		vvd(t, rc2t[1][2], 0.5749801116141106528e-3, 1e-12,
			tname, "23")

		vvd(t, rc2t[2][0], 0.5773474014081407076e-3, 1e-12,
			tname, "31")
		vvd(t, rc2t[2][1], 0.3961832391772658944e-4, 1e-12,
			tname, "32")
		vvd(t, rc2t[2][2], 0.9999998325501691969, 1e-12,
			tname, "33")
	}
}

func BenchmarkC2tcio(b *testing.B) {
	var rc2i, rpom [3][3]float64
	var era float64

	rc2i[0][0] = 0.9999998323037164738
	rc2i[0][1] = 0.5581526271714303683e-9
	rc2i[0][2] = -0.5791308477073443903e-3

	rc2i[1][0] = -0.2384266227524722273e-7
	rc2i[1][1] = 0.9999999991917404296
	rc2i[1][2] = -0.4020594955030704125e-4

	rc2i[2][0] = 0.5791308472168153320e-3
	rc2i[2][1] = 0.4020595661593994396e-4
	rc2i[2][2] = 0.9999998314954572365

	era = 1.75283325530307

	rpom[0][0] = 0.9999999999999674705
	rpom[0][1] = -0.1367174580728847031e-10
	rpom[0][2] = 0.2550602379999972723e-6

	rpom[1][0] = 0.1414624947957029721e-10
	rpom[1][1] = 0.9999999999982694954
	rpom[1][2] = -0.1860359246998866338e-5

	rpom[2][0] = -0.2550602379741215275e-6
	rpom[2][1] = 0.1860359247002413923e-5
	rpom[2][2] = 0.9999999999982369658

	tests := []struct {
		ref string
		fn  func([3][3]float64, float64, [3][3]float64) [3][3]float64
	}{
		{"cgo", CgoC2tcio},
		{"go", GoC2tcio},
	}

	for _, test := range tests {
		b.Run(test.ref, func(b *testing.B) {
			for i := 0; i < b.N; i++ {
				_ = test.fn(rc2i, era, rpom)
			}
		})
	}
}
